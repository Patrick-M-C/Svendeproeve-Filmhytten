@page "/movies"
@using Svendeprøve.Components.Models
@using Svendeprøve.Components.Services
@using System.Net.Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@rendermode InteractiveServer
@inject MovieService MovieService
@inject NavigationManager NavigationManager

@* 
    Blazor-komponent til visning af vores movie page hvor den tager 100 film fra TMDBs database og viser dem.
    Viser en simple liste over 100 film med blandet udgivelses dato.
    Bruger CSS til at danne vores liste over film og sætte en film plakat ind og sætte releases date på.
*@
<div class="booking-button-container">
    <button type="button" class="btn btn-primary btn-lg" @onclick="GoToBooking">Bestil Billet</button>
</div>

<h2 class="text-center mb-4">Filmoversigt</h2>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-center text-danger">@errorMessage</p>
}

@if (pagedMovies == null)
{
    <p class="text-center">Indlæser film...</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-6 g-3 justify-content-center">
        @foreach (var item in pagedMovies)
        {
            <div class="col-sm-5">
                <div class="card h-50 w-75 @(selectedMovieId == item.Id ? "highlight" : "")">
                    <img src="@item.poster_path" class="card-img-top" @onclick="() => HighlightMovie(item.Id)" />
                    <div class="card-body">
                        <div class="card-title text-center">
                            <h5>@item.Title</h5>
                            <h6>Release Date</h6>
                            <h6>@item.release_date</h6>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Movie> allMovies = new();
    private List<Movie> pagedMovies = new();
    private int? selectedMovieId = null;
    private string? errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            allMovies = await MovieService.GetMoviesAsync();
            pagedMovies = allMovies;
            Console.WriteLine($"Loaded {allMovies.Count} movies");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading movies: {ex.Message}");
            errorMessage = "Kunne ikke indlæse film. Prøv igen senere.";
        }
    }

    private void HighlightMovie(int movieId)
    {
        try
        {
            selectedMovieId = movieId;
            errorMessage = null;
            Console.WriteLine($"Selected movie ID: {movieId}");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error highlighting movie: {ex.Message}");
            selectedMovieId = null;
            errorMessage = "Fejl ved valg af film.";
            StateHasChanged();
        }
    }

    private void GoToBooking()
    {
        try
        {
            if (selectedMovieId == null)
            {
                errorMessage = "Vælg venligst en film før du bestiller.";
                Console.WriteLine("No movie selected for booking");
                StateHasChanged();
                return;
            }

            Console.WriteLine($"Navigating to /Hall with movie ID: {selectedMovieId}");
            NavigationManager.NavigateTo("/Hall");
            selectedMovieId = null;
            errorMessage = null;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in GoToBooking: {ex.Message}");
            errorMessage = "Fejl ved bestilling. Prøv igen.";
            StateHasChanged();
        }
    }
}

<style>
    .booking-button-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .row-cols-1 {
        flex: 0 0 100%;
    }

    .row-cols-md-6 {
        flex: 0 0 16.666667%;
    }

    .col-sm-5 {
        flex: 0 0 25%;
        max-width: 25%;
    }

    .card {
        border: 1px solid #ccc;
        border-radius: 5px;
        transition: all 0.2s ease;
    }

        .card.highlight {
            border: 2px solid #007bff;
            box-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
        }

    .card-img-top {
        width: 100%;
        cursor: pointer;
    }

    .card-body {
        padding: 1rem;
        text-align: center;
    }

    .text-danger {
        color: #dc3545; /* Bootstrap rød farve til fejlmeddelelser */
    }
</style>