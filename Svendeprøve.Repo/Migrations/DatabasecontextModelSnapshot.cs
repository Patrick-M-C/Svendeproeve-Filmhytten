// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Svendeprøve.Repo.DatabaseContext;

#nullable disable

namespace Svendeprøve.Repo.Migrations
{
    [DbContext(typeof(Databasecontext))]
    partial class DatabasecontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            id = 28,
                            name = "Action"
                        },
                        new
                        {
                            id = 12,
                            name = "Adventure"
                        },
                        new
                        {
                            id = 16,
                            name = "Animation"
                        },
                        new
                        {
                            id = 35,
                            name = "Comedy"
                        },
                        new
                        {
                            id = 80,
                            name = "Crime"
                        },
                        new
                        {
                            id = 99,
                            name = "Documentary"
                        },
                        new
                        {
                            id = 18,
                            name = "Drama"
                        },
                        new
                        {
                            id = 10751,
                            name = "Family"
                        },
                        new
                        {
                            id = 14,
                            name = "Fantasy"
                        },
                        new
                        {
                            id = 36,
                            name = "History"
                        },
                        new
                        {
                            id = 27,
                            name = "Horror"
                        },
                        new
                        {
                            id = 10402,
                            name = "Music"
                        },
                        new
                        {
                            id = 9648,
                            name = "Mystery"
                        },
                        new
                        {
                            id = 10749,
                            name = "Romance"
                        },
                        new
                        {
                            id = 878,
                            name = "Science Fiction"
                        },
                        new
                        {
                            id = 10770,
                            name = "TV Movie"
                        },
                        new
                        {
                            id = 53,
                            name = "Thriller"
                        },
                        new
                        {
                            id = 10752,
                            name = "War"
                        },
                        new
                        {
                            id = 37,
                            name = "Western"
                        });
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hall");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hall 1",
                            SeatCount = 9
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hall 2",
                            SeatCount = 4
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hall 3",
                            SeatCount = 4
                        });
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Seat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 1,
                            IsReserved = false,
                            Row = 1,
                            SeatNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            HallId = 1,
                            IsReserved = false,
                            Row = 1,
                            SeatNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            IsReserved = false,
                            Row = 1,
                            SeatNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            HallId = 1,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            HallId = 1,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            HallId = 1,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 6
                        },
                        new
                        {
                            Id = 7,
                            HallId = 1,
                            IsReserved = true,
                            Row = 3,
                            SeatNumber = 7
                        },
                        new
                        {
                            Id = 8,
                            HallId = 1,
                            IsReserved = true,
                            Row = 3,
                            SeatNumber = 8
                        },
                        new
                        {
                            Id = 9,
                            HallId = 1,
                            IsReserved = false,
                            Row = 3,
                            SeatNumber = 9
                        },
                        new
                        {
                            Id = 10,
                            HallId = 2,
                            IsReserved = false,
                            Row = 1,
                            SeatNumber = 1
                        },
                        new
                        {
                            Id = 11,
                            HallId = 2,
                            IsReserved = true,
                            Row = 1,
                            SeatNumber = 2
                        },
                        new
                        {
                            Id = 12,
                            HallId = 2,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 3
                        },
                        new
                        {
                            Id = 13,
                            HallId = 2,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 4
                        },
                        new
                        {
                            Id = 14,
                            HallId = 3,
                            IsReserved = true,
                            Row = 1,
                            SeatNumber = 1
                        },
                        new
                        {
                            Id = 15,
                            HallId = 3,
                            IsReserved = false,
                            Row = 1,
                            SeatNumber = 2
                        },
                        new
                        {
                            Id = 16,
                            HallId = 3,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 3
                        },
                        new
                        {
                            Id = 17,
                            HallId = 3,
                            IsReserved = false,
                            Row = 2,
                            SeatNumber = 4
                        });
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeatId");

                    b.HasIndex("UserId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCanceled = false,
                            Price = 75,
                            SeatId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsCanceled = false,
                            Price = 75,
                            SeatId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsCanceled = false,
                            Price = 95,
                            SeatId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsCanceled = true,
                            Price = 75,
                            SeatId = 4,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "kasper@mail.com",
                            Name = "Kasper",
                            Password = "placeholder1",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sofia@mail.com",
                            Name = "Sofia",
                            Password = "placeholder2",
                            PhoneNumber = "987654321"
                        });
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Seat", b =>
                {
                    b.HasOne("Svendeprøve.Repo.DTO.Hall", null)
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Ticket", b =>
                {
                    b.HasOne("Svendeprøve.Repo.DTO.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Svendeprøve.Repo.DTO.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.Hall", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("Svendeprøve.Repo.DTO.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
